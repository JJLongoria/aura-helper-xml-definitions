const { StringXMLField, ArrayXMLField, EnumXMLField, BooleanXMLField, XMLDataControlledField } = require('../factory/xmlFactory');
const MetadataTypes = require('../values/metadataTypes');
const DataValues = require('../values/dataValues');

module.exports = {
    label: new StringXMLField('label', 'label')
        .setMinApi(22)
        .setEditable()
        .setRequired()
        .setMaxLength(80),
    userLicense: new StringXMLField('userLicense', 'User License')
        .setMinApi(38),
    license: new StringXMLField('license', 'License')
        .setMinApi(22)
        .setMaxApi(37),
    description: new StringXMLField('description', 'Description')
        .setMinApi(22)
        .setEditable()
        .setMaxLength(255),
    hasActivationRequired: new BooleanXMLField('hasActivationRequired', 'Has Activation Required')
        .setMinApi(37),
    applicationVisibilities: new ArrayXMLField('applicationVisibilities', 'Application ')
        .setMinApi(29)
        .setEditable()
        .setMergeable()
        .setMetadataType(MetadataTypes.CUSTOM_APPLICATION)
        .setFieldKey('application')
        .addField('application', new StringXMLField('application', 'Application')
            .setUnique()
        )
        .addField('visible', new BooleanXMLField('visible', 'Visible')
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('default', new BooleanXMLField('default', 'Default')
            .setEditable()
            .setUnique()
            .addControlledField(new XMLDataControlledField('visible', true, true))
        ),
    classAccesses: new ArrayXMLField('classAccesses', 'Class Accesses')
        .setMinApi(23)
        .setEditable()
        .setMergeable()
        .setMetadataType(MetadataTypes.APEX_CLASS)
        .setFieldKey('apexClass')
        .addField('apexClass', new StringXMLField('apexClass', 'Apex Class')
            .setUnique()
        )
        .addField('enabled', new BooleanXMLField('enabled', 'Enabled')
            .setEditable()
            .setDefaultValue(true)
        ),
    customMetadataTypeAccesses: new ArrayXMLField('customMetadataTypeAccesses', 'Custom Metadata Type Accesses')
        .setMinApi(47)
        .setEditable()
        .setMetadataType(MetadataTypes.CUSTOM_METADATA)
        .setFieldKey('name')
        .addField('enabled', new BooleanXMLField('enabled', 'Enabled')
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('name', new StringXMLField('name', 'Name')
            .setUnique()
        ),
    customPermissions: new ArrayXMLField('customPermissions', 'Custom Permissions')
        .setMinApi(31)
        .setEditable()
        .setMetadataType(MetadataTypes.CUSTOM_PERMISSION)
        .setFieldKey('name')
        .addField('enabled', new BooleanXMLField('enabled', 'Enabled')
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('name', new StringXMLField('name', 'Name')
            .setUnique()
        ),
    customSettingAccesses: new ArrayXMLField('customSettingAccesses', 'Custom Settings Accesses')
        .setMinApi(47)
        .setEditable()
        .setMetadataType(MetadataTypes.CUSTOM_OBJECT)
        .setFieldKey('name')
        .addField('enabled', new BooleanXMLField('enabled', 'Enabled')
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('name', new StringXMLField('name', 'Name')
            .setUnique()
        ),
    externalDataSourceAccesses: new ArrayXMLField('externalDataSourceAccesses', 'External Data Source Accesses')
        .setMinApi(27)
        .setEditable()
        .setMetadataType(MetadataTypes.CUSTOM_OBJECT)
        .setFieldKey('externalDataSource')
        .addField('enabled', new BooleanXMLField('enabled', 'Enabled')
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('externalDataSource', new StringXMLField('externalDataSource', 'externalDataSource')
            .setUnique()
        ),
    fieldPermissions: new ArrayXMLField('fieldPermissions', 'Field Permissions')
        .setMinApi(23)
        .setEditable()
        .setMergeable()
        .setMetadataType(MetadataTypes.CUSTOM_FIELD)
        .setFieldKey('field')
        .addField('readable', new BooleanXMLField('readable', 'Readable')
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('field', new StringXMLField('field', 'Field')
            .setUnique()
            .setSeparator(DataValues.POINT)
        )
        .addField('editable', new BooleanXMLField('editable', 'Editable')
            .setEditable()
            .setDefaultValue(false)
            .addControlledField(new XMLDataControlledField('readable', true, true))
        ),
    flowAccesses: new ArrayXMLField('flowAccesses', 'Flow Accesses')
        .setMinApi(47)
        .setEditable()
        .setMergeable()
        .setMetadataType(MetadataTypes.FLOWS)
        .setFieldKey('flow')
        .addField('enabled', new BooleanXMLField('enabled', 'Enabled')
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('flow', new StringXMLField('flow', 'Flow')
            .setUnique()
        ),
    objectPermissions: new ArrayXMLField('objectPermissions', 'Object Permissions')
        .setMinApi(23)
        .setEditable()
        .setMergeable()
        .setMetadataType(MetadataTypes.CUSTOM_OBJECT)
        .setFieldKey('object')
        .addField('allowRead', new BooleanXMLField('allowRead', 'Allow Read')
            .setEditable()
            .setDefaultValue(true)
            .addControlledField(new XMLDataControlledField('allowCreate', false, false))
            .addControlledField(new XMLDataControlledField('allowEdit', false, false))
            .addControlledField(new XMLDataControlledField('allowDelete', false, false))
            .addControlledField(new XMLDataControlledField('viewAllRecords', false, false))
            .addControlledField(new XMLDataControlledField('modifyAllRecords', false, false))
        )
        .addField('allowCreate', new BooleanXMLField('allowCreate', 'Allow Create')
            .setEditable()
            .setDefaultValue(true)
            .addControlledField(new XMLDataControlledField('allowRead', true, true))
        )
        .addField('allowEdit', new BooleanXMLField('allowEdit', 'Allow Edit')
            .setEditable()
            .addControlledField(new XMLDataControlledField('allowRead', true, true))
            .addControlledField(new XMLDataControlledField('allowDelete', false, false))
            .addControlledField(new XMLDataControlledField('modifyAllRecords', false, false))
        )
        .addField('allowDelete', new BooleanXMLField('allowDelete', 'Allow Delete')
            .setEditable()
            .addControlledField(new XMLDataControlledField('allowRead', true, true))
            .addControlledField(new XMLDataControlledField('allowEdit', true, true))
            .addControlledField(new XMLDataControlledField('modifyAllRecords', false, false))
        )
        .addField('object', new StringXMLField('object', 'Object')
            .setUnique()
        )
        .addField('viewAllRecords', new BooleanXMLField('viewAllRecords', 'View All Records')
            .setEditable()
            .addControlledField(new XMLDataControlledField('allowRead', true, true))
            .addControlledField(new XMLDataControlledField('modifyAllRecords', false, false))
        )
        .addField('modifyAllRecords', new BooleanXMLField('modifyAllRecords', 'Modify All Records')
            .setEditable()
            .addControlledField(new XMLDataControlledField('allowRead', true, true))
            .addControlledField(new XMLDataControlledField('allowEdit', true, true))
            .addControlledField(new XMLDataControlledField('allowDelete', true, true))
            .addControlledField(new XMLDataControlledField('viewAllRecords', true, true))
        ),
    pageAccesses: new ArrayXMLField('pageAccesses', 'Visualforce Accesses')
        .setMinApi(23)
        .setEditable()
        .setMergeable()
        .setMetadataType(MetadataTypes.APEX_PAGE)
        .setFieldKey('apexPage')
        .addField('apexPage', new StringXMLField('apexPage', 'Apex Page')
            .setUnique()
        )
        .addField('enabled', new BooleanXMLField('enabled', 'Enabled')
            .setEditable()
            .setDefaultValue(true)
        ),
    recordTypeVisibilities: new ArrayXMLField('recordTypeVisibilities', 'Record Type Visibilities')
        .setMinApi(29)
        .setEditable()
        .setMetadataType(MetadataTypes.RECORD_TYPE)
        .setFieldKey('recordType')
        .addField('default', new BooleanXMLField('default', 'Default')
            .setEditable()
            .setUnique()
        )
        .addField('personAccountDefault', new BooleanXMLField('personAccountDefault', 'Person Account Default')
            .setEditable()
            .setUnique()
        )
        .addField('recordType', new StringXMLField('recordType', 'Record Type')
            .setUnique()
            .setSeparator(DataValues.POINT)
        )
        .addField('visible', new BooleanXMLField('visible', 'Visible')
            .setEditable()
            .setDefaultValue(true)
        ),
    tabSettings: new ArrayXMLField('tabSettings', 'Tab Settings')
        .setMinApi(26)
        .setMetadataType(MetadataTypes.TAB)
        .setEditable()
        .addField('tab', new StringXMLField('tab', 'Tab')
            .setUnique()
        )
        .addField('visibility', new EnumXMLField('visibility', 'visibility')
            .setEditable()
            .setDefaultValue('DefaultOn')
            .addEnumValue('Default On', 'DefaultOn')
            .addEnumValue('Default Off', 'DefaultOff')
            .addEnumValue('Hidden', 'Hidden')
        ),
    userPermissions: new ArrayXMLField('userPermissions', 'User Permissions')
        .setMinApi(22)
        .setEditable()
        .addField('enabled', new BooleanXMLField('enabled', 'Enabled')
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('name', new StringXMLField('name', 'Name')
            .setUnique()
        )
}