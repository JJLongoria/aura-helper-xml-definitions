const { StringXMLField, ObjectXMLField, IntegerXMLField, EnumXMLField, BooleanXMLField } = require('@ah/core').Types;
const { MetadataTypes } = require('@ah/core').Values;
const { Validator } = require('@ah/core').CoreUtils;

module.exports = {
    attributes: new ObjectXMLField('attributes', 'Attributes')
        .setMinApi(29)
        .setEditable()
        .setFieldKey('key')
        .addField('formula', new StringXMLField('formula', 'Formula')
            .setEditable()
            .setRequired()
        )
        .addField('key', new StringXMLField('key', 'Key')
            .setEditable()
            .setRequired()
        ),
    canvasConfig: new ObjectXMLField('canvasConfig', 'Canvas Config')
        .setMinApi(29)
        .setEditable()
        .setFieldKey('canvasUrl')
        .addField('accessMethod', new EnumXMLField('accessMethod', 'Access Method')
            .setEditable()
            .setRequired()
            .addEnumValue('Get', 'Get')
            .addEnumValue('Post', 'Post')
        )
        .addField('canvasUrl', new StringXMLField('canvasUrl', 'Canvas URL')
            .setEditable()
            .setRequired()
        )
        .addField('lifecycleClass', new StringXMLField('lifecycleClass', 'Life Cycle Class')
            .setMinApi(31)
            .setEditable()
            .setRequired()
            .setMetadataType(MetadataTypes.APEX_CLASS)
        )
        .addField('locations', new EnumXMLField('locations', 'Locations')
            .setEditable()
            .addEnumValue('Aura', 'Aura')
            .addEnumValue('App Launcher', 'AppLauncher')
            .addEnumValue('Chatter', 'Chatter')
            .addEnumValue('Chatter Feed', 'ChatterFeed')
            .addEnumValue('Mobile Navigation', 'MobileNav', 31)
            .addEnumValue('None', 'None')
            .addEnumValue('Open CTI', 'OpenCTI')
            .addEnumValue('Page Layout', 'PageLayout', 31)
            .addEnumValue('Publisher', 'Publisher')
            .addEnumValue('Service Desk', 'ServiceDesk')
            .addEnumValue('User Profile', 'UserProfile')
            .addEnumValue('Visualforce', 'Visualforce')
        )
        .addField('options', new EnumXMLField('options', 'Options')
            .setMinApi(30)
            .setEditable()
            .addEnumValue('Hide Share', 'HideShare', 30)
            .addEnumValue('Hide Header', 'HideHeader', 30)
            .addEnumValue('Personal Enabled', 'PersonalEnabled', 32)
        )
        .addField('samlInitiationMethod', new EnumXMLField('samlInitiationMethod', 'SAML Initiation Method')
            .setMinApi(31)
            .setEditable()
            .addEnumValue('Identity Provided Initiated', 'IdpInitiated')
            .addEnumValue('Service Provider Initiated', 'SpInitiated')
            .addEnumValue('None', 'None')
        ),
    contactEmail: new StringXMLField('contactEmail', 'Contact Email')
        .setMinApi(29)
        .setEditable()
        .setRequired(),
    contactPhone: new StringXMLField('contactPhone', 'Contact Phone')
        .setMinApi(29)
        .setEditable(),
    description: new StringXMLField('description', 'Description')
        .setMinApi(29)
        .setEditable(),
    iconUrl: new StringXMLField('iconUrl', 'Icon URL')
        .setMinApi(29)
        .setEditable(),
    infoUrl: new StringXMLField('infoUrl', 'Info URL')
        .setMinApi(29)
        .setEditable(),
    ipRanges: new ObjectXMLField('ipRanges', 'IP Ranges')
        .setMinApi(29)
        .setEditable()
        .setFieldKey(['startAddress', 'endAddress'])
        .setSortOrder(['startAddress', 'endAddress'])
        .addField('description', new StringXMLField('description', 'Description')
            .setMinApi(31)
            .setEditable()
            .setMaxLength(255)
        )
        .addField('endAddress', new StringXMLField('endAddress', 'End Address')
            .setRequired()
            .setEditable()
            .addMatchPattern(Validator.getIpv4Regexp())
            .addMatchPattern(Validator.getIpv6Regexp())
        )
        .addField('startAddress', new StringXMLField('startAddress', 'Start Address')
            .setRequired()
            .setEditable()
            .addMatchPattern(Validator.getIpv4Regexp())
            .addMatchPattern(Validator.getIpv6Regexp())
        ),
    label: new StringXMLField('label', 'Label')
        .setMinApi(29)
        .setEditable()
        .setRequired(),
    logoUrl: new StringXMLField('logoUrl', 'Logo URL')
        .setMinApi(29)
        .setEditable(),
    mobileStartUrl: new StringXMLField('mobileStartUrl', 'Mobile Start URL')
        .setMinApi(29)
        .setEditable(),
    oauthConfig: new ObjectXMLField('oauthConfig', 'OAuth Config')
        .setMinApi(29)
        .setEditable()
        .setFieldKey('consumerKey')
        .setSortOrder(undefined)
        .addField('assetTokenConfig', new ObjectXMLField('assetTokenConfig', 'Asset Token Config')
            .setMinApi(49)
            .setEditable()
            .setFieldKey('assetAudiences')
            .setSortOrder(undefined)
            .addField('assetAudiences', new StringXMLField('assetAudiences', 'Asset Audiences')
                .setEditable()
            )
            .addField('assetIncludeAttributes', new BooleanXMLField('assetIncludeAttributes', 'Asset Include Attributes')
                .setEditable()
                .setDefaultValue(true)
            )
            .addField('assetIncludeCustomPerms', new BooleanXMLField('assetIncludeCustomPerms', 'Asset Include Custom Perms')
                .setEditable()
                .setDefaultValue(true)
            )
            .addField('assetSigningCertId', new StringXMLField('assetSigningCertId', 'Asset Signing Cert Id')
                .setEditable()
            )
            .addField('assetValidityPeriod', new IntegerXMLField('assetValidityPeriod', 'Asset Validity Period')
                .setEditable()
            )
        )
        .addField('callbackUrl', new StringXMLField('callbackUrl', 'Callback URL')
            .setEditable()
            .setRequired()
        )
        .addField('certificate', new StringXMLField('certificate', 'Certificate')
            .setEditable()
        )
        .addField('consumerKey', new StringXMLField('consumerKey', 'Consumer Key')
            .setEditable()
        )
        .addField('consumerSecret', new StringXMLField('consumerSecret', 'Consumer Secret')
            .setMinApi(32)
            .setEditable()
        )
        .addField('idTokenConfig', new ObjectXMLField('idTokenConfig', 'ID Token Config')
            .setMinApi(43)
            .setEditable()
            .setFieldKey('idTokenAudience')
            .setSortOrder(undefined)
            .addField('idTokenAudience', new StringXMLField('idTokenAudience', 'ID Token Audience')
                .setEditable()
            )
            .addField('idTokenIncludeAttributes', new BooleanXMLField('idTokenIncludeAttributes', 'ID Token Include Attributes')
                .setEditable()
            )
            .addField('idTokenIncludeCustomPerms', new BooleanXMLField('idTokenIncludeCustomPerms', 'ID Token Include Custom Perms')
                .setEditable()
            )
            .addField('idTokenIncludeStandardClaims', new BooleanXMLField('idTokenIncludeStandardClaims', 'ID Token Include Standard Claims')
                .setEditable()
            )
            .addField('idTokenValidity', new IntegerXMLField('idTokenValidity', 'ID Token Validity')
                .setEditable()
                .setDefaultValue(2)
                .setMinValue(1)
                .setMinValue(720)
            )
        )
        .addField('isAdminApproved', new BooleanXMLField('isAdminApproved', 'Is Admin Approved')
            .setMinApi(46)
            .setEditable()
            .setDefaultValue(false)
        )
        .addField('isConsumerSecretOptional', new BooleanXMLField('isConsumerSecretOptional', 'Is Consumer Secret Optional')
            .setMinApi(49)
            .setEditable()
            .setDefaultValue(false)
        )
        .addField('isIntrospectAllTokens', new BooleanXMLField('isIntrospectAllTokens', 'Is Introspect All Tokens')
            .setMinApi(49)
            .setEditable()
            .setDefaultValue(false)
        )
        .addField('isSecretRequiredForRefreshToken', new BooleanXMLField('isSecretRequiredForRefreshToken', 'Is Secret Required For Refresh Token')
            .setMinApi(51)
            .setEditable()
            .setDefaultValue(true)
        )
        .addField('scopes', new EnumXMLField('scopes', 'Scopes')
            .setEditable()
            .addEnumValue('Basic', 'Basic')
            .addEnumValue('API', 'Api')
            .addEnumValue('Web', 'Web')
            .addEnumValue('Full', 'Full')
            .addEnumValue('Chatter', 'Chatter')
            .addEnumValue('Custom Applications', 'CustomApplications')
            .addEnumValue('Refresh Token', 'RefreshToken')
            .addEnumValue('Open ID', 'OpenID')
            .addEnumValue('Profile', 'Profile')
            .addEnumValue('Email', 'Email')
            .addEnumValue('Address', 'Address')
            .addEnumValue('Basic', 'Basic')
            .addEnumValue('Phone', 'Phone')
            .addEnumValue('Offline Access', 'OfflineAccess')
            .addEnumValue('Custom Permissions', 'CustomPermissions')
            .addEnumValue('Wave', 'Wave', 35)
            .addEnumValue('Eclair', 'Eclair', 35)
            .addEnumValue('Pardot', 'Pardot', 49)
            .addEnumValue('Lightning', 'Lightning', 51)
            .addEnumValue('Content', 'Content', 51)
            .addEnumValue('Lightning', 'Lightning', 51)
        )
        .addField('singleLogoutUrl', new StringXMLField('singleLogoutUrl', 'Single Logout URL')
            .setEditable()
        ),
    oauthPolicy: new ObjectXMLField('oauthPolicy', 'OAuth Policy')
        .setMinApi(49)
        .setEditable()
        .setFieldKey('ipRelaxation')
        .setSortOrder(undefined)
        .addField('ipRelaxation', new EnumXMLField('ipRelaxation', 'IP Relaxation')
            .setEditable()
            .addEnumValue('Enforce', 'ENFORCE')
            .addEnumValue('Bypass 2 Factor', 'BYPASS_2FACTOR')
            .addEnumValue('Bypass', 'BYPASS')
            .addEnumValue('Enforce Relax Refresh', 'ENFORCE_RELAXREFRESH')
        )
        .addField('refreshTokenPolicy', new EnumXMLField('refreshTokenPolicy', 'Refresh Token Policy')
            .setEditable()
            .addEnumValue('Zero', 'zero')
            .addEnumValue('Infinite', 'infinite')
            .addEnumValue('Specific Life Time', 'specific_lifetime:number:HOURS')
            .addEnumValue('Specific Inactivity', 'specific_inactivity:number:HOURS')
        )
        .addField('singleLogoutUri', new StringXMLField('singleLogoutUri', 'Single Logout URI')
            .setEditable()
        ),
    permissionSetName: new StringXMLField('permissionSetName', 'Permission Set Name')
        .setMinApi(46)
        .setEditable(),
    plugin: new StringXMLField('plugin', 'Plugin')
        .setMinApi(29)
        .setEditable(),
    pluginExecutionUser: new StringXMLField('pluginExecutionUser', 'Plugin Execution User')
        .setMinApi(46)
        .setEditable(),
    profileName: new StringXMLField('profileName', 'Profile Name')
        .setMinApi(46)
        .setEditable(),
    samlConfig: new ObjectXMLField('samlConfig', 'SAML Config')
        .setMinApi(29)
        .setEditable()
        .setFieldKey('issuer')
        .setSortOrder(undefined)
        .addField('acsUrl', new StringXMLField('acsUrl', 'acs URL')
            .setEditable()
            .setRequired()
        )
        .addField('certificate', new StringXMLField('certificate', 'Certificate')
            .setEditable()
        )
        .addField('entityUrl', new StringXMLField('entityUrl', 'Entity URL')
            .setEditable()
            .setRequired()
        )
        .addField('encryptionCertificate', new StringXMLField('encryptionCertificate', 'Encryption Certificate')
            .setMinApi(30)
            .setEditable()
        )
        .addField('encryptionType', new EnumXMLField('encryptionType', 'Encryption Type')
            .setMinApi(30)
            .setEditable()
            .addEnumValue('AES 128 bit', 'AES_128')
            .addEnumValue('AES 256 bit', 'AES_256')
            .addEnumValue('Triple Data Encryption Algorithm', 'Triple_Des')
        )
        .addField('issuer', new StringXMLField('issuer', 'Issuer')
            .setMinApi(29)
            .setEditable()
        )
        .addField('samlIdpSLOBinding', new EnumXMLField('samlIdpSLOBinding', 'SAML IdpSLOBinding')
            .setMinApi(40)
            .setEditable()
            .addEnumValue('Post Binding', 'PostBinding')
            .addEnumValue('Redirect Binding', 'RedirectBinding')
        )
        .addField('samlNameIdFormat', new EnumXMLField('samlNameIdFormat', 'SAML Name ID Format')
            .setMinApi(29)
            .setEditable()
            .addEnumValue('Unspecified', 'Unspecified')
            .addEnumValue('Email Address', 'EmailAddress')
            .addEnumValue('Persistent', 'Persistent')
            .addEnumValue('Transient', 'Transient')
        )
        .addField('samlSigningAlgoType', new EnumXMLField('samlSigningAlgoType', 'SAML Signing Algo Type')
            .setMinApi(50)
            .setEditable()
            .addEnumValue('SHA1', 'SHA1')
            .addEnumValue('SHA256', 'SHA256')
        )
        .addField('samlSloUrl', new StringXMLField('samlSloUrl', 'SAML Single-Logout URL')
            .setMinApi(40)
            .setEditable()
        )
        .addField('samlSubjectCustomAttr', new StringXMLField('samlSubjectCustomAttr', 'SAML Subject Custom Attributes')
            .setEditable()
        )
        .addField('samlSubjectType', new EnumXMLField('samlSubjectType', 'SAML Subject Type')
            .setEditable()
            .setRequired()
            .addEnumValue('Username', 'Username')
            .addEnumValue('Federation ID', 'FederationId')
            .addEnumValue('User ID', 'UserId')
            .addEnumValue('Persistent ID', 'PersistentID')
            .addEnumValue('Custom Attribute', 'CustomAttr')
        ),
    sessionPolicy: new ObjectXMLField('sessionPolicy', 'Session Policy')
        .setMinApi(49)
        .setEditable()
        .setFieldKey('sessionLevel')
        .setSortOrder(undefined)
        .addField('policyAction', new EnumXMLField('policyAction', 'Policy Action')
            .setEditable()
            .addEnumValue('Block', 'Block')
            .addEnumValue('Raise Session Level', 'RaiseSessionLevel')
        )
        .addField('sessionLevel', new StringXMLField('sessionLevel', 'Session Level')
            .setEditable()
        )
        .addField('sessionTimeout', new IntegerXMLField('sessionTimeout', 'Session Timeout')
            .setEditable()
        ),
    startUrl: new StringXMLField('startUrl', 'Start URL')
        .setMinApi(29)
        .setEditable()
}