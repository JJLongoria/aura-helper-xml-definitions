const { StringXMLField, ObjectXMLField, ArrayXMLField, EnumXMLField, BooleanXMLField, XMLDependencyField } = require('@ah/core').Types;
const { MetadataTypes } = require('@ah/core').Values;

module.exports = {
    action: new ObjectXMLField('action', 'Action')
        .setMinApi(35)
        .setEditable()
        .setRequired()
        .addField('block', new BooleanXMLField('block', 'Block')
            .setEditable()
        )
        .addField('endSession', new BooleanXMLField('endSession', 'End Session')
            .setEditable()
        )
        .addField('freezeUser', new BooleanXMLField('freezeUser', 'Freeze User')
            .setEditable()
        )
        .addField('notifications', new ArrayXMLField('notifications', 'Notifications')
            .setEditable()
            .addField('inApp', new BooleanXMLField('inApp', 'In App')
                .setEditable()
            )
            .addField('sendEmail', new BooleanXMLField('sendEmail', 'Send Email')
                .setEditable()
            )
            .addField('user', new BooleanXMLField('user', 'user')
                .setEditable()
                .linkFieldToSObject('User', 'Username')
            )
        )
        .addField('twoFactorAuthentication', new BooleanXMLField('twoFactorAuthentication', 'Two Factor Authentication')
            .setEditable()
        ),
    active: new BooleanXMLField('active', 'Active')
        .setMinApi(35)
        .setEditable()
        .setRequired(),
    apexClass: new StringXMLField('apexClass', 'Apex Class')
        .setMinApi(46)
        .setEditable()
        .setMetadataType(MetadataTypes.APEX_CLASS),
    blockMessage: new StringXMLField('blockMessage', 'Block Message')
        .setMinApi(49)
        .setEditable()
        .setMaxLength(1000),
    description: new StringXMLField('description', 'Description')
        .setMinApi(35)
        .setEditable(),
    developerName: new StringXMLField('developerName', 'Developer Name')
        .setMinApi(35)
        .setEditable()
        .setRequired()
        .setUnique(),
    eventName: new EnumXMLField('eventName', 'Event Name')
        .setMinApi(45)
        .setEditable()
        .addEnumValue('API Event', 'ApiEvent')
        .addEnumValue('API Anomaly Event Store', 'ApiAnomalyEventStore', 50)
        .addEnumValue('Bulk API Result Event Store', 'BulkApiResultEventStore', 50)
        .addEnumValue('Credential Stuffing Event Store', 'CredentialStuffingEventStore', 49)
        .addEnumValue('List View Event', 'ListViewEvent')
        .addEnumValue('Login Event', 'LoginEvent')
        .addEnumValue('Report Anomaly Event Store', 'ReportAnomalyEventStore', 49)
        .addEnumValue('Report Event', 'ReportEvent')
        .addEnumValue('Session Hijacking Event Store', 'SessionHijackingEventStore', 49),
    eventType: new EnumXMLField('eventType', 'Event Type')
        .setMinApi(35)
        .setEditable()
        .addEnumValue('Access Resource', 'AccessResource')
        .addEnumValue('Audit Trail', 'AuditTrail')
        .addEnumValue('Data Export', 'DataExport')
        .addEnumValue('Entity', 'Entity')
        .addEnumValue('Login', 'Login'),
    executionUser: new StringXMLField('executionUser', 'Execution User')
        .setMinApi(35)
        .setEditable()
        .linkFieldToSObject('User', 'Username'),
    flow: new StringXMLField('flow', 'Flow')
        .setMinApi(35)
        .setEditable()
        .setMetadataType(MetadataTypes.FLOW),
    masterLabel: new StringXMLField('masterLabel', 'Master Label')
        .setMinApi(35)
        .setEditable()
        .setRequired(),
    resourceName: new EnumXMLField('resourceName', 'Resource Name')
        .setMinApi(35)
        .setEditable()
        .addEnumValue('Connected Application', 'ConnectedApplication')
        .addEnumValue('Reports', 'Reports')
        .addEnumValue('Account', 'Account')
        .addEnumValue('Case', 'Case')
        .addEnumValue('Contact', 'Contact')
        .addEnumValue('Lead', 'Lead')
        .addEnumValue('Opportunity', 'Opportunity')
        .addEnumValue('Auth Provider', 'AuthProvider')
        .addEnumValue('Chatter Message', 'ChatterMessage')
        .addEnumValue('Feed Comment', 'FeedComment')
        .addEnumValue('Feed Item', 'FeedItem')
        .addEnumValue('Idea', 'Idea')
        .addEnumValue('Question', 'Question')
        .addEnumValue('Login History', 'LoginHistory')
        .addDependencyField(new XMLDependencyField('eventType', 'AccessResource', ['ConnectedApplication', 'Reports']))
        .addDependencyField(new XMLDependencyField('eventType', 'DataExport', ['Account', 'Case', 'Lead', 'Opportunity']))
        .addDependencyField(new XMLDependencyField('eventType', 'Entity', ['AuthProvider', 'ChatterMessage', 'FeedComment', 'FeedItem', 'Idea', 'Question']))
        .addDependencyField(new XMLDependencyField('eventType', 'Login', ['LoginHistory'])),
    type: new EnumXMLField('type', 'Type')
        .setMinApi(35)
        .setEditable()
        .setDefaultValue('CustomApexPolicy')
        .addEnumValue('Custom Apex Policy', 'CustomApexPolicy')
        .addEnumValue('Custom Condition Builder Policy', 'CustomConditionBuilderPolicy')
}