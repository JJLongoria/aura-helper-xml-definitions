import { StringXMLField, BooleanXMLField, ArrayXMLField, XMLDependencyField, DataValues, MetadataTypes, EnumXMLField, IntegerXMLField, DoubleXMLField, ObjectXMLField } from '@aurahelper/core';

function discoveryFilter(name: string, label: string) {
    return new ArrayXMLField(name, label)
        .setEditable()
        .addField('field', new StringXMLField('field', 'Field')
            .setEditable()
        )
        .addField('operator', new EnumXMLField('operator', 'Operator')
            .setEditable()
            .addEnumValue('Equal', 'Equal')
            .addEnumValue('Not Equal', 'NotEqual')
            .addEnumValue('Greater Than', 'GreaterThan')
            .addEnumValue('Greater Than Or Equal', 'GreaterThanOrEqual')
            .addEnumValue('Less Than', 'LessThan')
            .addEnumValue('Less Than Or Equal', 'LessThanOrEqual')
            .addEnumValue('Between', 'Between')
            .addEnumValue('Not Between', 'NotBetween')
            .addEnumValue('In Set', 'InSet')
            .addEnumValue('Not In', 'NotIn')
            .addEnumValue('Contains', 'Contains')
            .addEnumValue('Starts With', 'StartsWith')
            .addEnumValue('Ends With', 'EndsWith')
            .addEnumValue('Is Null', 'IsNull')
            .addEnumValue('Is Not Null', 'IsNotNull')
        )
        .addField('type', new EnumXMLField('type', 'Type')
            .setEditable()
            .addEnumValue('Text', 'Text')
            .addEnumValue('Number', 'Number')
            .addEnumValue('Date', 'Date')
            .addEnumValue('Date Time', 'DateTime')
            .addEnumValue('Boolean', 'Boolean')
        )
        .addField('values', new ArrayXMLField('values', 'Values')
            .setEditable()
            .addField('type', new EnumXMLField('type', 'Type')
                .setEditable()
                .addEnumValue('Constant', 'Constant')
                .addEnumValue('PlaceHolder', 'PlaceHolder')
            )
            .addField('value', new EnumXMLField('value', 'Value')
                .setEditable()
                .addEnumValue('Constant', 'Constant')
                .addEnumValue('PlaceHolder', 'PlaceHolder')
            )
        )
}

export const DiscoveryGoal = {
    active: new BooleanXMLField('active', 'Active')
        .setMinApi(51)
        .setEditable()
        .setRequired(),
    deployedModels: new ArrayXMLField('deployedModels', 'Deployed Models')
        .setMinApi(51)
        .setEditable()
        .addField('active', new BooleanXMLField('active', 'Active')
            .setEditable()
            .setRequired()
        )
        .addField('aiModel', new StringXMLField('aiModel', 'AI Model')
            .setEditable()
            .setMetadataType(MetadataTypes.DISCOVERY_AI_MODEL)
        )
        .addField('classificationThreshold', new DoubleXMLField('classificationThreshold', 'Classification Threshold')
            .setEditable()
        )
        .addField('fieldMappings', new ArrayXMLField('fieldMappings', 'Field Mappings')
            .setEditable()
            .addField('mappedField', new StringXMLField('mappedField', 'Mapped Field')
                .setEditable()
            )
            .addField('modelField', new StringXMLField('modelField', 'Model Field')
                .setEditable()
            )
            .addField('sobjectFieldJoinKey', new StringXMLField('sobjectFieldJoinKey', 'SObject Field Join Key')
                .setEditable()
                .addDependencyField(new XMLDependencyField('sourceType', ['SalesforceField'], DataValues.NULL, DataValues.NOT_NULL))
            )
            .addField('source', new StringXMLField('source', 'Source')
                .setEditable()
            )
            .addField('sourceFieldJoinKey', new StringXMLField('sourceFieldJoinKey', 'Source Field Join Key')
                .setEditable()
            )
            .addField('sourceType', new EnumXMLField('sourceType', 'Source Type')
                .setEditable()
                .addEnumValue('Salesforce Field', 'SalesforceField')
                .addEnumValue('Analytics Dataset Field', 'AnalyticsDatasetField')
            )
        )
        .addField('filters', discoveryFilter('filters', 'Filters'))
        .addField('label', new StringXMLField('label', 'Label')
            .setEditable()
        )
        .addField('name', new StringXMLField('name', 'Name')
            .setEditable()
        )
        .addField('prescribableFields', new ArrayXMLField('prescribableFields', 'Prescribable Fields')
            .setEditable()
            .addField('customDefinitions', new ArrayXMLField('type', 'Type')
                .setEditable()
                .addField('filters', discoveryFilter('filters', 'Filters'))
                .addField('template', new StringXMLField('template', 'Template')
                    .setEditable()
                )
            )
            .addField('name', new StringXMLField('name', 'name')
                .setEditable()
            )
        ),
    label: new StringXMLField('label', 'Label')
        .setMinApi(51)
        .setEditable(),
    modelCards: new ArrayXMLField('modelCards', 'Model Cards')
        .setEditable()
        .setMinApi(51)
        .addField('contactEmail', new StringXMLField('contactEmail', 'Contact Email')
            .setEditable()
        )
        .addField('contactName', new StringXMLField('contactName', 'Contact Name')
            .setEditable()
        )
        .addField('label', new StringXMLField('label', 'Label')
            .setEditable()
        )
        .addField('sections', new StringXMLField('sections', 'Sections')
            .setEditable()
        ),
    outcome: new ObjectXMLField('outcome', 'Outcome')
        .setMinApi(51)
        .setEditable()
        .addField('field', new StringXMLField('field', 'Field')
            .setEditable()
        )
        .addField('fieldLabel', new StringXMLField('fieldLabel', 'Field Label')
            .setEditable()
        )
        .addField('goal', new EnumXMLField('goal', 'Goal')
            .setEditable()
            .addEnumValue('Minimize', 'Minimize')
            .addEnumValue('Maximize', 'Maximize')
            .addEnumValue('None', 'None')
        )
        .addField('mappedField', new StringXMLField('mappedField', 'Mapped Field')
            .setEditable()
        ),
    predictionType: new EnumXMLField('predictionType', 'Prediction Type')
        .setEditable()
        .setMinApi(51)
        .addEnumValue('Unknown', 'Unknown')
        .addEnumValue('Regression', 'Regression')
        .addEnumValue('Classification', 'Classification')
        .addEnumValue('Multiclass Classification', 'MulticlassClassification'),
    pushbackField: new StringXMLField('pushbackField', 'Pushback Field')
        .setMinApi(51)
        .setEditable(),
    pushbackType: new EnumXMLField('pushbackType', 'Pushback Type')
        .setEditable()
        .setMinApi(51)
        .addEnumValue('AI Record Insight', 'AiRecordInsight')
        .addEnumValue('Direct', 'Direct'),
    subscribedEntity: new StringXMLField('subscribedEntity', 'Subscribed Entity')
        .setMinApi(51)
        .setEditable(),
    terminalStateFilters: discoveryFilter('terminalStateFilters', 'Terminal State Filters')
};